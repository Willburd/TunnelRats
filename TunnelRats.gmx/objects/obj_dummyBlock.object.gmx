<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blockParent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Used for input and depth sorting
// world chunks make and manage these as puppets
z = 0;
exposure = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(rectangle_in_rectangle(x,y-16,x+16,y+32,view_xview[0]-8,view_yview[0]-8,view_xview[0]+view_wview[0]+8,view_yview[0]+view_hview[0]+8) &gt; 0)
{
    var yOffset = scr_DrawYOffset(x,y,z);
    var solveAlpha = clamp( inverse_lerp(global.currentCameraZLevel-3,global.currentCameraZLevel+global.drawLayerDepth,(z/16)) , 0, 1);
    
    if(exposure == 0)
    {
        draw_sprite_ext(spr_blockDarken,0   , x, y + yOffset, 1, 1, 0, image_blend, 1);
    }
    else if(floor(z/16) &gt;= floor(global.currentCameraZLevel))
    {
        draw_sprite_ext(sprite_index,0, x, y + yOffset, 1, 1, 0, image_blend, 1);
        draw_sprite_ext(spr_blockDarken,0   , x, y + yOffset, 1, 1, 0, image_blend, solveAlpha);
    }
    else if(floor(z/16) == floor(global.currentCameraZLevel-1))
    {
        draw_sprite_ext(sprite_index,0, x, y + yOffset, 1, 1, 0, image_blend, 1);
        draw_sprite_ext(spr_blockDarken,0   , x, y + yOffset, 1, 1, 0, image_blend, 0.1);
    }
    else
    {
        draw_sprite_ext(sprite_index,0, x, y + yOffset, 1, 1, 0, image_blend, 1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
