<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerTest</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>obj_WorldEntityGravityParent</parentName>
  <maskName>spr_colMaskEntityCheck</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Data
landingLag = 0;
holdingJumpStill = false;

sprinting = false;
crouching = false;
prevCrouching = false;

itemSuction = noone;

PlayerSaveTimer = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with itemSuction instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// landing event called by gravity parent
// landing dust puff.
part_particles_create(global.partSys,x + random_range(-8,8) ,y + random_range(-2,2), global.partLibrary[? "DustPuff"],8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// entity save called, write personal data before destruction
if(EntityData[? "Identity"] == global.PlayerProfile[? "ProfileName"])
{
    scr_EntityPlayerProfileUpdate(EntityData[? "Identity"],x,y,z,worldController.UniverseNumber,worldController.LoadedLayer);
    scr_EntityPlayerSave(global.PlayerProfile);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// movement code

// crouching
prevCrouching = crouching;
crouching = false;
if(keyboard_check(global.keyCrouch))
{
    crouching = true;
}

sprinting = false;
if(keyboard_check(global.keySprint))
{
    sprinting = true;
}


// control XY movement
var UD = 0;
var LR = 0;
if(keyboard_check(global.keyLeft)) LR += -1;
if(keyboard_check(global.keyRight)) LR += 1;
if(keyboard_check(global.keyUp)) UD += -1;
if(keyboard_check(global.keyDown)) UD += 1;


// apply movement acceleration
if(UD != 0 || LR != 0)
{
    var maxSpd = 0.8 * scr_TSFactor();
    if(crouching)
    {
        maxSpd = 0.42 * scr_TSFactor();
    }
    else if(sprinting)
    {
        maxSpd = 1.5 * scr_TSFactor();
    }
    
    if(Nmomentum &lt; maxSpd)
    {
        Nmomentum += scr_DTscale(0.3) * scr_TSFactor();
    }
    else
    {
        Nmomentum *= scr_DTmultiplier(-0.08);
        if(sprinting &amp;&amp; z == attemptedGround &amp;&amp; random(1) &lt; 0.4)
        {
            part_particles_create(global.partSys,x+random_range(-8,8),y+random_range(-1,1), global.partLibrary[? "RunPuff"],1);
        }
    }
    Ndirection = point_direction(0,0, LR, UD);
}
else
{
    Nmomentum *= scr_DTmultiplier(-0.15);
    if(Nmomentum &lt; 0.01)
    {
        Nmomentum = 0;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Jump control
if(z == attemptedGround)
{
    // jump cooldown (maybe rolling animation?)
    landingLag -= scr_DTscale(1);
    
    // jumping!
    if(keyboard_check(global.keyJump) &amp;&amp; holdingJumpStill == false)
    {
        if(landingLag &lt;= 0)
        {
            if(keyboard_check(global.keySprint))
            {
                // runjump
                Zmomentum = -3;
                Nmomentum *= 2;
                landingLag = 5;
            }
            else
            {
                // jump
                Zmomentum = -3;
                Nmomentum *= 1.1;
                landingLag = 2;
            }
        }
    }
}

// prevent jump spam
if(keyboard_check(global.keyJump))
{
    holdingJumpStill = true;
}
else
{
    holdingJumpStill = false;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Update depth info
depth = scr_DrawDepth(x,y,z);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// post update stuff
if(itemSuction == noone)
{
    itemSuction = instance_create(x,y,obj_PlayerSuction);
}

itemSuction.playerID = id;
itemSuction.x = x;
itemSuction.y = y;

PlayerSaveTimer += 1;
if(PlayerSaveTimer &gt; 10)
{
    event_user(2);
    PlayerSaveTimer = random_range(-10,0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_text(0,16, instance_number(obj_WorldEntityParent));
// draw_text(0,16, global._game_time / global._game_max_time);
/*
if(ActiveChunk != noone &amp;&amp; ActiveChunk.ground != -1 &amp;&amp; ActiveChunk.ground[# 0,0] != -1)
{
    var xx = floor((x-ActiveChunk.x) / 16);
    var yy = floor((y-ActiveChunk.y) / 16);

    if(xx &gt;= 0 &amp;&amp; yy &gt;= 0 &amp;&amp; xx &lt; global.chunkWidth &amp;&amp; yy &lt; global.chunkHeight)
    {
        var block = ActiveChunk.ground[# xx,yy];
        draw_text(0,0,string_upper(block[? "Name"]));
    }
}

if(ActiveChunk != noone &amp;&amp; ActiveChunk.bdata != -1 &amp;&amp; ActiveChunk.bdata[# 0,0] != -1)
{
    var biome = global.layerLoadedBiomes[| ActiveChunk.bdata[# 0,0]];
    draw_text(0,0,string_upper(biome[? "_InternalSaveName"]));
}
*/

if(keyboard_check(vk_f2))
{
    if(instance_exists(ActiveChunk))
    {
        for (q=0; q&lt;global.chunkWidth; q+=1)
        {
            for (c=0; c&lt;global.chunkHeight; c+=1)
            {
                draw_text(q*24,c*24,ActiveChunk.zdata[# q,c]);
            }
        }
    }
}

/*
if(EntityData != -1)
{
    var invList = EntityData[? "Inventory"];
    for (var i=0; i&lt; ds_list_size(invList); i+=1)
    {
        var slot = invList[| i];
        draw_text(8,8+(18*i),string_upper(string(slot[| 0])) + " X " + string(slot[| 1]));
    }
    
}*/

// draw_text(8,8,scr_MetaChunkGetIdentity(x,y,worldController.LoadedLayer));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(shadowType &gt; 0)
{
    draw_sprite_ext(spr_shadow,shadowType,x,y + scr_DrawYOffset(attemptedGround),1,1,0,image_blend,1);
}

var imgIndex = global.animationStep - animationStartOffset;
if(crouching)
{
    draw_sprite_ext(spr_playerCrouch,imgIndex*animationSpeed,x,y + scr_DrawYOffset(z),1,1,0,image_blend,1);
}
else
{
    draw_sprite_ext(spr_playerTest,imgIndex*animationSpeed,x,y + scr_DrawYOffset(z),1,1,0,image_blend,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="113">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>repeat(irandom(10)) 
{
    with obj_WorldController
    {
        //var player = scr_EntitySpawn(other.x,other.y,obj_testPhysicsObject,id);
    }
    
    
    var xx = floor(x/16);
    var yy = floor(y/16);
    
    show_debug_message("Data at current XY ------------------------------------------------------------");
    show_debug_message("Temp " + string(scr_SafeData(global.worldData[? "TemperatureMap"]   ,xx,yy,global.temperatureMap_Scale)));
    show_debug_message("Humi " + string(scr_SafeData(global.worldData[? "HumidityMap"]      ,xx,yy,global.humidityMap_Scale)));
    show_debug_message("Wind " + string(scr_SafeData(global.worldData[? "WindMap"]          ,xx,yy,global.windMap_Scale)));
    show_debug_message("Magi " + string(scr_SafeData(global.worldData[? "MagicMap"]         ,xx,yy,global.magicMap_Scale)));
    show_debug_message("Evil " + string(scr_SafeData(global.worldData[? "EvilMap"]          ,xx,yy,global.evilMap_Scale)));
    show_debug_message("Deni " + string(scr_SafeData(global.worldData[? "DensityMap"]       ,xx,yy,global.densityMap_Scale)));
    show_debug_message("Cont " + string(scr_SafeData(global.worldData[? "ContinentMap"]     ,xx,yy,global.continentMap_Scale)));
    show_debug_message("Moun " + string(scr_SafeData(global.worldData[? "MountainMap"]      ,xx,yy,global.mountainMap_Scale)));
    show_debug_message("Hill " + string(scr_SafeData(global.worldData[? "HillMap"]          ,xx,yy,global.hillMap_Scale)));
    show_debug_message("------------------------------------------------------------------------------");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
