<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controller</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-99999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_colMask16x</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.currentGame == noone)
{
    global.currentGame = id;
}
else if(global.currentGame != id)
{
    instance_destroy();
}

show_debug_overlay(true);
scrollCooldown = 0;


mouse_left_current = false;
mouse_left_previous = false;
mouse_right_current = false;
mouse_right_previous = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.selectedObject == id)
{
    global.unselectCoolDown = 0;
    global.selectedObject = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// block control
var mouse_left_pressed = false;
var mouse_left_released = false;
var mouse_right_pressed = false;
var mouse_right_released = false;

// update inputs!
if(mouse_check_button(mb_left))
{
    mouse_left_current = true;

    if(!mouse_left_previous)
    {
        mouse_left_pressed = true;   
    }
}
else
{
    mouse_left_current = false;
    
    if(mouse_left_previous)
    {
        mouse_left_released = true;
    }
}

if(mouse_check_button(mb_right))
{
    mouse_right_current = true;

    if(!mouse_right_previous)
    {
        mouse_right_pressed = true;   
    }
}
else
{
    mouse_right_current = false;
    
    if(mouse_right_previous)
    {
        mouse_right_released = true;
    }
}


if(instance_exists(global.selectedObject))
{
    if(mouse_right_pressed)
    {
        // test delete block!
        if(global.selectedObject.object_index == obj_dummyBlock)
        {
            scr_ChunkSetBlock(global.selectedObject.chunkOwner,global.selectedObject.x,global.selectedObject.y,global.selectedObject.z,-1);
            scr_ChunkUpdate(global.selectedObject.chunkOwner,true);
            show_debug_message("Removed block " + string(global.selectedObject));
            with global.selectedObject instance_destroy();
        }
    }
}





// update for next frame
mouse_left_previous = mouse_left_current;
mouse_right_previous = mouse_right_current;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.unselectCoolDown -= 1;
if(global.unselectCoolDown &lt;= 0)
{
    global.selectedObject = noone; // reset selection
    global.unselectCoolDown = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(room_speed != global.gameMaxFrames)
{
    room_speed = global.gameMaxFrames;
}

// entities and game controller updates
global._game_time += delta_time;
if(global._game_time &gt;= global._game_max_time)
{
    global._game_time = global._game_time - delta_time;
    
    // pause check
    if(!global.gamePaused)
    {
        // update game
        with(obj_gameUpdatedParent)
        {
            // updated when not paused
            event_user(0);
        }
        
        global.animationStep += 1; // 30fps animation timer
    }

    with(obj_alwaysUpdatedParent)
    {
        // updated always
        event_user(0);
    }
}


global._frame_time += delta_time;
if(global._frame_time &gt;= global._frame_max_time)
{
    global._frame_time = global._frame_time - delta_time;
    draw_enable_drawevent(true);
}
else
{
    draw_enable_drawevent(false);
}

scrollCooldown--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="109">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scrollCooldown &lt;= 0)
{
    if(global.currentCameraZLevel &gt; 0) global.currentCameraZLevel -= 1;
    scrollCooldown = 50;   
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="107">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(scrollCooldown &lt;= 0)
{
    global.currentCameraZLevel += 1;
    scrollCooldown = 50;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// setup game cameras
var viewh = global.outputResolutionHeight;
var vieww = global.resArray[global.resMode];

// default view
view_visible[0] = true;
view_hview[0] = viewh;
view_wview[0] = vieww;
view_hport[0] = viewh;
view_wport[0] = vieww;

/// Update window size to new data!
window_set_rectangle(window_get_x(),window_get_y(), vieww,viewh);

surface_resize(application_surface,vieww,viewh);
display_set_gui_size(vieww,viewh);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
