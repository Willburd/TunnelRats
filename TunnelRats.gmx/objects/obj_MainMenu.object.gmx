<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_controller</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_alwaysUpdatedParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu init
menuLayer = -1;
selection = 0;
menu = ds_list_create();
menu[| 0] = "NEW WORLD";
menu[| 1] = "LOAD WORLD";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var menuBackward = (keyboard_check_pressed(global.keyExit) || keyboard_check_pressed(global.keyItemRotateRight));
var menuForward = (keyboard_check_pressed(global.keyPause) || keyboard_check_pressed(global.keyItemRotateLeft));

if(menuBackward || menuForward || menuLayer == -1 )
{
    var gotoMenu = -2;
    if(menuLayer == -1)
    {
        // auto load first menu!
        gotoMenu = 0;
    }
    else if(menuLayer == 0)
    {
        // MAIN MENU
        switch(selection)
        {
            case 0:
                // new world
                if(menuForward) gotoMenu = 1;
            break;
        
            case 1:
                // load world
                if(menuForward) gotoMenu = 2;
            break;
        }
    }
    else if(menuLayer == 1)
    {
        // New world
        gotoMenu = 0;
    }
    else if(menuLayer == 2)
    {
        // Load world menu
        if(menuBackward) gotoMenu = 0;
        if(menuForward) 
        {
            if(selection == 0) 
            {
                gotoMenu = 0;
            }
            else
            {
                global.worldInitialName = menu[| selection];
                global.worldInitialSeed = -1;
                room_goto(rm_World);
            }
        }
    }
    
    
    if(gotoMenu != -2 &amp;&amp; gotoMenu != menuLayer)
    {
        selection = 0;
        ds_list_clear(menu);
    
        if(gotoMenu == 0)
        {
            // setup main menu            
            menu[| 0] = "NEW WORLD";
            menu[| 1] = "LOAD WORLD";
        }
        else if(gotoMenu == 1)
        {
            // temp
            gotoMenu = 0;
            var name = get_string("World name?","");
            
            if(string_length(name) &gt; 0)
            {
                var allowMake = true;
                var loadDir = working_directory + "/Worlds/" + name + "/World.dat";
                if(file_exists(loadDir))
                {
                    if(!show_question("World [" + string(name) + "] already exists! Do you want to replace it?"))
                    {
                        allowMake = false;
                    }
                    else
                    {
                        directory_destroy(working_directory + "/Worlds/" + name + "/");
                    }
                }
            
                if(allowMake)
                {
                    var seed = get_integer("World seed?",0);
                    
                    global.worldInitialName = name;
                    global.worldInitialSeed = seed;
                    room_goto(rm_World);
                }
            }
        }
        else if(gotoMenu == 2)
        {
            // Load world menu
            var loadDir = working_directory + "/Worlds/*";
                
            // scan for json block libraries
            var scanFile = file_find_first( loadDir, fa_directory);
            var i = 0;
            
            menu[| 0] = "BACK";
            
            while(scanFile != "")
            {
                // check if a valid world!    
                if(file_exists(working_directory + "/Worlds/" + string(scanFile) + "/World.dat" ))
                {
                    menu[| 1+i++] = string_upper( string(scanFile));
                }
                
                // scanFiles
                scanFile = file_find_next();
            }
            
            file_find_close();
        }
    
        // set menu!
        menuLayer = gotoMenu; 
    }
    
}
else if(keyboard_check_pressed(global.keyUp))
{
    if(selection &gt; 0) selection -= 1;
}
else if(keyboard_check_pressed(global.keyDown))
{
    if(selection &lt; ds_list_size(menu)-1) selection += 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var BLX =  view_xview[0];
var BLY =  view_yview[0] + view_hview[0];

for (var i=0; i&lt;ds_list_size(menu); i+=1)
{
    var text = menu[| i];
    if(selection == i) text = ")" + text;
    draw_text(BLX+8,BLY-48 + (i*16), text);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
